var _a, _b;
function readString(buffer, offs, length) {
    var u = new Uint8Array(buffer);
    var S = '';
    for (var i = 0; i < length; i++)
        S += String.fromCharCode(u[offs + i]);
    return S;
}
function writeBytes(buffer, offs, S) {
    new Uint8Array(buffer).set(new Uint8Array(S), offs);
}
function makeStrBytes(S) {
    var u = new Uint8Array(S.length);
    for (var i = 0; i < S.length; i++)
        u[i] = S.charCodeAt(i);
    return u.buffer;
}
var BinaryDataInit = (_a = {},
    _a["G8MJ01" /* JP */] = "gI2ZwICEACBUhHAiOIRBQICtFjiApQCofYUiFH2JA6ZOgAQg",
    _a["G8MP01" /* EU */] = "gI2bMICEACBUhHAiOIRCYICtHHiApQCofYUiFH2JA6ZOgAQg",
    _a["G8ME01" /* US */] = "gI2asICEACBUhHAiOIRCYICtG5iApQCofYUiFH2JA6ZOgAQg",
    _a);
var BinaryDataMain = (_b = {},
    _b["G8MJ01" /* JP */] = "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",
    _b["G8MP01" /* EU */] = "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",
    _b["G8ME01" /* US */] = "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",
    _b);
function decodeBinaryData(S) {
    return Uint8Array.from(window.atob(S), function (c) { return c.charCodeAt(0); }).buffer;
}
function patch(view, fileNumber) {
    var version = readString(view.buffer, 0x00, 0x06);
    var validVersions = ["G8MJ01" /* JP */, "G8ME01" /* US */, "G8MP01" /* EU */];
    if (!validVersions.includes(version))
        return 2 /* WrongSaveFileGameID */;
    var internalFilename = readString(view.buffer, 0x08, 0x11);
    if (internalFilename !== 'mariost_save_file')
        return 3 /* WrongSaveFileInternalName */;
    if (fileNumber < 1 || fileNumber > 4)
        return 4 /* InvalidFileNumber */;
    var offsetFile0 = ((fileNumber - 1) * 0x4000) + 0x2040;
    var offsetFile1 = offsetFile0 + 0x10000;
    function patchFilesU16(offset, value) {
        view.setUint16(offsetFile0 + offset, value, false);
        view.setUint16(offsetFile1 + offset, value, false);
    }
    function patchFilesU32(offset, value) {
        view.setUint32(offsetFile0 + offset, value, false);
        view.setUint32(offsetFile1 + offset, value, false);
    }
    function patchFilesBytes(offset, value) {
        writeBytes(view.buffer, offsetFile0 + offset, value);
        writeBytes(view.buffer, offsetFile1 + offset, value);
    }
    // Write the pointer to the init ASM function.
    if (version === "G8MJ01" /* JP */) {
        patchFilesU32(0x11AC, 0x803D8214);
    }
    else if (version === "G8ME01" /* US */) {
        patchFilesU32(0x3B4, 0x803DBDAC);
    }
    else if (version === "G8MP01" /* EU */) {
        patchFilesU32(0x104, 0x803E7E0C);
    }
    // Write the pointer to the current anim data for the partner.
    if (version === "G8MJ01" /* JP */) {
        // JP doesn't need this pointer.
    }
    else if (version === "G8ME01" /* US */) {
        patchFilesU32(0x3B0, 0x802CB1A8);
    }
    else if (version === "G8MP01" /* EU */) {
        patchFilesU32(0x100, 0x802D6E2C);
    }
    // Make sure the selected file exists.
    patchFilesU16(0x00, 0x00);
    // Write the new file name.
    patchFilesBytes(0x11C4, makeStrBytes('DOL Loader\0'));
    // Set the current follower ID.
    if (version === "G8MJ01" /* JP */) {
        patchFilesU32(0x11E8, 0x4F04);
    }
    else {
        patchFilesU32(0x11E8, 0x4F7F);
    }
    // Write the init ASM function.
    if (version === "G8MJ01" /* JP */) {
        patchFilesBytes(0x1184, decodeBinaryData(BinaryDataInit[version]));
    }
    else {
        patchFilesBytes(0x119C, decodeBinaryData(BinaryDataInit[version]));
    }
    // Write the main ASM function.
    if (version === "G8MJ01" /* JP */) {
        patchFilesBytes(0x2140, decodeBinaryData(BinaryDataMain[version]));
    }
    else {
        patchFilesBytes(0x2260, decodeBinaryData(BinaryDataMain[version]));
    }
    var dataFieldSize = (version === "G8MJ01" /* JP */) ? 0x2140 : 0x2260;
    var dataFieldSum = 0;
    for (var i = 0; i < dataFieldSize; i++)
        dataFieldSum = (dataFieldSum + view.getUint8(offsetFile0 + i)) >>> 0;
    // Patch in checksums.
    patchFilesU32(0x3FF8, dataFieldSum);
    patchFilesU32(0x3FFC, (~dataFieldSum) >>> 0);
    return 0 /* Success */;
}
function downloadFile(filename, data) {
    var blob = new Blob([data], { type: 'application/octet-stream' });
    var url = window.URL.createObjectURL(blob);
    var elem = document.createElement('a');
    elem.setAttribute('href', url);
    elem.setAttribute('download', filename);
    document.body.appendChild(elem);
    elem.click();
    document.body.removeChild(elem);
}
function displayResult(e) {
    var errorMessage = document.querySelector('div#errormessage');
    if (e === 0 /* Success */) {
        errorMessage.textContent = '';
        return true;
    }
    else if (e === 1 /* NotSaveFile */) {
        errorMessage.textContent = 'The file you specified was not a valid .gci save file';
        return false;
    }
    else if (e === 2 /* WrongSaveFileGameID */) {
        errorMessage.textContent = 'This save file is not for Paper Mario: The Thousand Year Door';
        return false;
    }
    else if (e === 3 /* WrongSaveFileInternalName */) {
        errorMessage.textContent = 'This save file has the wrong internal ID. Please make sure you are using a normal Paper Mario: The Thousand Year Door save file.';
        return false;
    }
    else if (e === 4 /* InvalidFileNumber */) {
        // should not happen
        throw "whoops";
    }
}
function fileSubmitted() {
    var input = document.querySelector('input#fileupload');
    var file = input.files[0];
    if (!file.name.endsWith('.gci')) {
        if (!displayResult(1 /* NotSaveFile */))
            return;
    }
    var fileNumberInput = document.querySelector('select#filenumber');
    var fileNumber = Number(fileNumberInput.selectedOptions[0].textContent);
    var outputFilename = file.name.replace(/\..*$/, '') + "_DOL_Loader.gci";
    var reader = new FileReader();
    reader.onload = function () {
        var buffer = reader.result;
        var view = new DataView(buffer);
        var res = patch(view, fileNumber);
        if (!displayResult(res))
            return;
        downloadFile(outputFilename, buffer);
    };
    reader.readAsArrayBuffer(file);
}
function main() {
    var form = document.querySelector('form#uploadform');
    form.onsubmit = function (e) {
        fileSubmitted();
        return false;
    };
}
window.onload = function () {
    main();
};
